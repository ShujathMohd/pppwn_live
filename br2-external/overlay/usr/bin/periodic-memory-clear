#!/bin/sh
#
# Periodic Memory Clearing Script for PPPwn Live System
# Runs in background to periodically clear sensitive data from memory
#

# Configuration
CONFIG_FILE="/etc/pppwn/config"
CLEAR_INTERVAL=60  # Clear memory every 60 seconds
PID_FILE="/var/run/periodic-memory-clear.pid"

# Load configuration
if [ -f "$CONFIG_FILE" ]; then
    eval $(grep -E '^[a-zA-Z_][a-zA-Z0-9_]*=' "$CONFIG_FILE" | sed 's/^/export /')
fi

# Check if already running
if [ -f "$PID_FILE" ]; then
    if kill -0 $(cat "$PID_FILE") 2>/dev/null; then
        echo "Periodic memory clearing is already running"
        exit 1
    else
        rm -f "$PID_FILE"
    fi
fi

# Function to clear sensitive memory
clear_memory() {
    # Clear shell history
    history -c 2>/dev/null || true
    
    # Clear temporary files with sensitive patterns
    find /tmp -name "*pppwn*" -type f -mmin +5 -delete 2>/dev/null || true
    find /tmp -name "*exploit*" -type f -mmin +5 -delete 2>/dev/null || true
    find /tmp -name "*network*" -type f -mmin +5 -delete 2>/dev/null || true
    
    # Clear system caches if configured
    if [ "$clear_memory_on_shutdown" = "true" ]; then
        sync
        echo 1 > /proc/sys/vm/drop_caches 2>/dev/null || true
    fi
    
    logger -t periodic-memory-clear "Memory clearing cycle completed"
}

# Function to run in daemon mode
run_daemon() {
    echo $$ > "$PID_FILE"
    
    logger -t periodic-memory-clear "Starting periodic memory clearing (interval: ${CLEAR_INTERVAL}s)"
    
    while true; do
        clear_memory
        sleep "$CLEAR_INTERVAL"
    done
}

# Function to stop daemon
stop_daemon() {
    if [ -f "$PID_FILE" ]; then
        local pid=$(cat "$PID_FILE")
        if kill -0 "$pid" 2>/dev/null; then
            kill "$pid"
            rm -f "$PID_FILE"
            echo "Periodic memory clearing stopped"
        else
            echo "Periodic memory clearing was not running"
            rm -f "$PID_FILE"
        fi
    else
        echo "Periodic memory clearing is not running"
    fi
}

# Main function
case "$1" in
    "start")
        if [ "$clear_memory_on_shutdown" = "true" ]; then
            run_daemon &
            echo "Periodic memory clearing started"
        else
            echo "Memory clearing is disabled in configuration"
        fi
        ;;
    "stop")
        stop_daemon
        ;;
    "clear")
        clear_memory
        echo "Memory cleared manually"
        ;;
    "status")
        if [ -f "$PID_FILE" ] && kill -0 $(cat "$PID_FILE") 2>/dev/null; then
            echo "Periodic memory clearing is running (PID: $(cat "$PID_FILE"))"
        else
            echo "Periodic memory clearing is not running"
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|clear|status}"
        echo "  start  - Start periodic memory clearing daemon"
        echo "  stop   - Stop periodic memory clearing daemon"
        echo "  clear  - Clear memory once manually"
        echo "  status - Show daemon status"
        exit 1
        ;;
esac