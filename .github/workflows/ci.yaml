name: Build the pppwn_live ISO images

on:
  push:
    branches:
      - main

jobs:
  build_iso:
    name: Build and Cross-Compile ISO Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x86_64, aarch64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Alpine Linux for ${{ matrix.architecture }}
        uses: jirutka/setup-alpine@v1
        with:
          arch: ${{ matrix.architecture }}
          branch: edge
          packages: |
            alpine-sdk
            alpine-conf
            xorriso
            squashfs-tools
            grub
            grub-efi
            doas
            alpine-base
            busybox
            openrc
            bash
            agetty
            wget
            mtools
            dosfstools
          shell-name: alpine

      - name: Prepare PPPwn Binaries
        shell: alpine --root {0}
        env:
          ARCH: ${{ matrix.architecture }}
        run: |
          echo "ARCH is $ARCH"
          [ -d /tmp/pppwntargz ] && rm -rf /tmp/pppwntargz
          mkdir -p /tmp/pppwntargz
          cd /tmp/pppwntargz
          wget https://github.com/xfangfang/PPPwn_cpp/releases/latest/download/${ARCH}-linux-musl.zip
          unzip -p ${ARCH}-linux-musl.zip | tar -xzOf - pppwn > pppwn && rm ${ARCH}-linux-musl.zip
          wget https://github.com/B-Dem/PPPwnUI/raw/main/PPPwn/goldhen/1100/stage1.bin
          wget https://github.com/B-Dem/PPPwnUI/raw/main/PPPwn/goldhen/1100/stage2.bin
          cd /tmp
          tar -czf pppwn-${ARCH}.tar.gz pppwntargz/*

      - name: Install Required Packages
        shell: alpine --root {0}
        env:
          ARCH: ${{ matrix.architecture }}
        run: |
          find /tmp -name "pppwn-${ARCH}.tar.gz" -exec cp {} aports/scripts/pppwn.tar.gz \;
          echo "permit nopass root" | tee -a /etc/doas.conf
          abuild-keygen -i -a -n -q
          apk update
          mkdir -p ~/tmp ~/work/iso/${ARCH}
          export TMPDIR=~/tmp
          cp -rf custom/* aports/scripts/
          chmod +x aports/scripts/*
          ln -s /usr/lib/libalpine.sh /lib/libalpine.sh

      - name: Build ISO
        shell: alpine --root {0}
        env:
          ARCH: ${{ matrix.architecture }}
        run: |
          echo "Building ISO for ${ARCH}..."
          find /tmp -name "pppwn-${ARCH}.tar.gz" -exec cp -rf {} aports/scripts/pppwn.tar.gz \;
          sh aports/scripts/mkimage.sh --tag edge --outdir ~/work/iso/${ARCH} --arch ${ARCH} --repository https://dl-cdn.alpinelinux.org/alpine/edge/main --profile pppwn
          mv ~/work/iso/${ARCH}/alpine-pppwn-edge-${ARCH}.iso ~/work/iso/${ARCH}/pppwn-live-${ARCH}.iso

      - name: Upload ISO Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pppwn-live-${{ matrix.architecture }}-iso
          path: |
            ~/work/iso/${{ matrix.architecture }}/*.iso