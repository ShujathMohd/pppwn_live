name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'br2-external/**'
      - 'configs/**'
      - 'stage1/**'
      - 'stage2/**'
      - 'old_pppwnlive/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'br2-external/**'
      - 'configs/**'
      - 'stage1/**'
      - 'stage2/**'
      - 'old_pppwnlive/**'
      - '.github/workflows/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      stage1-changed: ${{ steps.changes.outputs.stage1 }}
      stage2-changed: ${{ steps.changes.outputs.stage2 }}
      config-changed: ${{ steps.changes.outputs.config }}
      old-pppwnlive-changed: ${{ steps.changes.outputs.old-pppwnlive }}
      overlay-changed: ${{ steps.changes.outputs.overlay }}
      workflow-changed: ${{ steps.changes.outputs.workflow }}
      build-needed: ${{ steps.changes.outputs.build-needed }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Detect specific changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          stage1:
            - 'stage1/**'
            - 'br2-external/package/pppwn-stage1/**'
          stage2:
            - 'stage2/**'
            - 'br2-external/package/pppwn-stage2/**'
          config:
            - 'configs/**'
            - 'br2-external/configs/**'
            - 'br2-external/external.*'
            - 'br2-external/Config.in'
          old-pppwnlive:
            - 'old_pppwnlive/**'
          overlay:
            - 'br2-external/overlay/**'
            - 'br2-external/scripts/**'
          workflow:
            - '.github/workflows/**'
          build-needed:
            - 'br2-external/**'
            - 'configs/**'
            - 'stage1/**'
            - 'stage2/**'
            - 'old_pppwnlive/**'
            - '.github/workflows/**'

    - name: Log change summary
      run: |
        echo "## Change Detection Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Changed |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| Stage1 Payloads | ${{ steps.changes.outputs.stage1 }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Stage2 Payloads | ${{ steps.changes.outputs.stage2 }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build Configuration | ${{ steps.changes.outputs.config }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Old PPPwnLive | ${{ steps.changes.outputs.old-pppwnlive }} |" >> $GITHUB_STEP_SUMMARY
        echo "| System Overlay | ${{ steps.changes.outputs.overlay }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Workflows | ${{ steps.changes.outputs.workflow }} |" >> $GITHUB_STEP_SUMMARY
        echo "| **Build Required** | **${{ steps.changes.outputs.build-needed }}** |" >> $GITHUB_STEP_SUMMARY

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.build-needed == 'true'
    uses: ./.github/workflows/build.yml
    with:
      config: 'pppwn_defconfig'
      architecture: 'x86_64'
      upload-artifacts: true
    secrets: inherit

  validate-stage1:
    needs: detect-changes
    if: needs.detect-changes.outputs.stage1-changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate stage1 payloads
      run: |
        echo "Validating stage1 payload structure..."
        if [ -d "stage1" ]; then
          find stage1 -type f -name "*.bin" | while read -r file; do
            echo "Checking $file..."
            if [ ! -s "$file" ]; then
              echo "Error: $file is empty"
              exit 1
            fi
            echo "✓ $file is valid"
          done
        else
          echo "Warning: stage1 directory not found"
        fi

  validate-stage2:
    needs: detect-changes
    if: needs.detect-changes.outputs.stage2-changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate stage2 payloads
      run: |
        echo "Validating stage2 payload structure..."
        if [ -d "stage2" ]; then
          find stage2 -type f -name "*.bin" | while read -r file; do
            echo "Checking $file..."
            if [ ! -s "$file" ]; then
              echo "Error: $file is empty"
              exit 1
            fi
            echo "✓ $file is valid"
          done
        else
          echo "Warning: stage2 directory not found"
        fi

  validate-config:
    needs: detect-changes
    if: needs.detect-changes.outputs.config-changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate Buildroot configuration
      run: |
        echo "Validating Buildroot configuration files..."
        
        # Check defconfig exists and is valid
        if [ -f "configs/pppwn_defconfig" ]; then
          echo "✓ pppwn_defconfig found"
          
          # Basic syntax validation
          if grep -q "BR2_x86_64=y" configs/pppwn_defconfig; then
            echo "✓ x86_64 architecture configured"
          else
            echo "Error: x86_64 architecture not configured"
            exit 1
          fi
          
          if grep -q "BR2_TARGET_ROOTFS_ISO9660=y" configs/pppwn_defconfig; then
            echo "✓ ISO9660 filesystem configured"
          else
            echo "Error: ISO9660 filesystem not configured"
            exit 1
          fi
        else
          echo "Error: pppwn_defconfig not found"
          exit 1
        fi
        
        # Check external configuration
        if [ -f "br2-external/external.desc" ]; then
          echo "✓ Buildroot external descriptor found"
        else
          echo "Error: Buildroot external descriptor not found"
          exit 1
        fi

  skip-build:
    needs: detect-changes
    if: needs.detect-changes.outputs.build-needed == 'false'
    runs-on: ubuntu-latest
    steps:
    - name: Skip build notification
      run: |
        echo "## Build Skipped" >> $GITHUB_STEP_SUMMARY
        echo "No changes detected that require rebuilding the ISO." >> $GITHUB_STEP_SUMMARY
        echo "The following paths trigger builds:" >> $GITHUB_STEP_SUMMARY
        echo "- \`br2-external/**\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`configs/**\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`stage1/**\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`stage2/**\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`old_pppwnlive/**\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`.github/workflows/**\`" >> $GITHUB_STEP_SUMMARY