name: Build ISO Image

on:
  workflow_call:
    inputs:
      architecture:
        required: true
        type: string
      iso_name:
        required: true
        type: string

jobs:
  setup-alpine:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Alpine Linux for ${{ github.event.inputs.architecture }}
        uses: jirutka/setup-alpine@v1
        with:
          arch: ${{ github.event.inputs.architecture }}
          branch: edge
          packages: |
            alpine-sdk
            alpine-conf
            xorriso
            squashfs-tools
            grub
            grub-efi
            doas
            alpine-base
            busybox
            openrc
            bash
            agetty
            wget
            mtools
            dosfstools
          shell-name: alpine-${{ github.event.inputs.architecture }}.sh

  create-tar:
    runs-on: ubuntu-latest
    steps:
      - name: Create pppwn.tar.gz for ${{ github.event.inputs.architecture }}
        shell: alpine-${{ github.event.inputs.architecture }}.sh --root {0}
        run: |
          [ -d /tmp/pppwntargz ] && rm -rf /tmp/pppwntargz
          mkdir -p /tmp/pppwntargz
          cd /tmp/pppwntargz
          wget https://github.com/xfangfang/PPPwn_cpp/releases/latest/download/${{ github.event.inputs.architecture }}-linux-musl.zip
          unzip -p ${{ github.event.inputs.architecture }}-linux-musl.zip | tar -xzOf - pppwn > pppwn && rm ${{ github.event.inputs.architecture }}-linux-musl.zip
          wget https://github.com/B-Dem/PPPwnUI/raw/main/PPPwn/goldhen/1100/stage1.bin
          wget https://github.com/B-Dem/PPPwnUI/raw/main/PPPwn/goldhen/1100/stage2.bin
          cd /tmp
          tar -czf pppwn-${{ github.event.inputs.architecture }}.tar.gz pppwntargz/*

  prepare-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Install required packages and prepare environment
        shell: alpine-${{ github.event.inputs.architecture }}.sh --root {0}
        run: |
          find /tmp -name "pppwn-${{ github.event.inputs.architecture }}.tar.gz" -exec cp {} aports/scripts/pppwn.tar.gz \;
          echo "permit nopass root" | tee -a /etc/doas.conf
          abuild-keygen -i -a -n -q
          apk update
          mkdir -p ~/tmp ~/work/iso/${{ github.event.inputs.architecture }}
          export TMPDIR=~/tmp
          cp -rf custom/* aports/scripts/
          chmod +x aports/scripts/*
          ln -s /usr/lib/libalpine.sh /lib/libalpine.sh

  build-iso:
    runs-on: ubuntu-latest
    steps:
      - name: Build ISO for ${{ github.event.inputs.architecture }}
        shell: alpine-${{ github.event.inputs.architecture }}.sh --root {0}
        run: |
          echo "Building ISO for ${{ github.event.inputs.architecture }}..."
          find /tmp -name "pppwn-${{ github.event.inputs.architecture }}.tar.gz" -exec cp -rf {} aports/scripts/pppwn.tar.gz \;
          sh aports/scripts/mkimage.sh --tag edge --outdir ~/work/iso/${{ github.event.inputs.architecture }} --arch ${{ github.event.inputs.architecture }} --repository https://dl-cdn.alpinelinux.org/alpine/edge/main --profile pppwn
          mv ~/work/iso/${{ github.event.inputs.architecture }}/alpine-pppwn-edge-${{ github.event.inputs.architecture }}.iso ~/work/iso/${{ github.event.inputs.architecture }}/${{ github.event.inputs.iso_name }}

  upload-iso:
    runs-on: ubuntu-latest
    steps:
      - name: Upload ISO artifacts for ${{ github.event.inputs.architecture }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.iso_name }}
          path: |
            ~/work/iso/${{ github.event.inputs.architecture }}/*.iso